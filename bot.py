from flask import Flask, request
import telebot
import db

TOKEN = "8359451352:AAG-z6lpvX0QP18weJfBS5T7twBcS7qMoEw"  # –≤—Å—Ç–∞–≤—å —Å—é–¥–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω
bot = telebot.TeleBot(TOKEN)
app = Flask(__name__)

db.init_db()

@bot.message_handler(commands=['register'])
def register(message):
    chat_id = message.chat.id
    if db.is_logged_in(chat_id) or db.check_password(chat_id, ""):
        bot.send_message(chat_id, "–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.")
        return
    bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:")
    bot.register_next_step_handler(message, process_registration)

def process_registration(message):
    chat_id = message.chat.id
    password = message.text.strip()
    is_admin = 0
    if len(db.get_users()) == 0:
        is_admin = 1
    if db.register_user(chat_id, password, is_admin):
        bot.send_message(chat_id, "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!")
    else:
        bot.send_message(chat_id, "–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.")

@bot.message_handler(commands=['login'])
def login(message):
    chat_id = message.chat.id
    bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –≤—Ö–æ–¥–∞:")
    bot.register_next_step_handler(message, process_login)

def process_login(message):
    chat_id = message.chat.id
    password = message.text.strip()
    if db.check_password(chat_id, password):
        db.set_logged_in(chat_id, 1)
        bot.send_message(chat_id, "–í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω.")
    else:
        bot.send_message(chat_id, "–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å.")

@bot.message_handler(commands=['logout'])
def logout(message):
    chat_id = message.chat.id
    db.set_logged_in(chat_id, 0)
    bot.send_message(chat_id, "–í—ã –≤—ã—à–ª–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã.")

@bot.message_handler(commands=['predict'])
def predict(message):
    chat_id = message.chat.id
    if not db.is_logged_in(chat_id):
        bot.send_message(chat_id, "–í—ã –¥–æ–ª–∂–Ω—ã –≤–æ–π—Ç–∏ —Å –ø–æ–º–æ—â—å—é /login.")
        return
    db.add_prediction(chat_id)
    bot.send_message(chat_id, "–ó–¥–µ—Å—å –±—ã–ª–æ –±—ã –≤–∞—à–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ üì∑")

@bot.message_handler(commands=['admin_panel'])
def admin_panel(message):
    chat_id = message.chat.id
    if not db.is_admin(chat_id):
        bot.send_message(chat_id, "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")
        return
    users = db.get_users()
    text = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:\n"
    for uid, preds, adm in users:
        text += f"ID: {uid}, –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π: {preds}, –ê–¥–º–∏–Ω: {adm}\n"
    bot.send_message(chat_id, text)
    bot.send_message(chat_id, "–ö–æ–º–∞–Ω–¥—ã:\n/del_user ID\n/add_admin ID")

@bot.message_handler(commands=['del_user'])
def del_user_cmd(message):
    chat_id = message.chat.id
    if not db.is_admin(chat_id):
        return
    try:
        uid = int(message.text.split()[1])
        db.delete_user(uid)
        bot.send_message(chat_id, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {uid} —É–¥–∞–ª—ë–Ω.")
    except:
        bot.send_message(chat_id, "–§–æ—Ä–º–∞—Ç: /del_user ID")

@bot.message_handler(commands=['add_admin'])
def add_admin_cmd(message):
    chat_id = message.chat.id
    if not db.is_admin(chat_id):
        return
    try:
        uid = int(message.text.split()[1])
        db.make_admin(uid)
        bot.send_message(chat_id, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {uid} —Ç–µ–ø–µ—Ä—å –∞–¥–º–∏–Ω.")
    except:
        bot.send_message(chat_id, "–§–æ—Ä–º–∞—Ç: /add_admin ID")

@app.route(f"/{TOKEN}", methods=["POST"])
def webhook():
    json_str = request.get_data().decode("UTF-8")
    update = telebot.types.Update.de_json(json_str)
    bot.process_new_updates([update])
    return "OK", 200
